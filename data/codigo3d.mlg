ptr = 0;
h = 0;
stack [1000000] ;
heap [1000000] ; 
com_paquete1_funcion_ANY_ANY_ANY_ {
t0= ptr + 2;
stack[t0] = 2 ;
t1= ptr + 0;
stack[t1] = 3 ;
t2 = ptr +0;
t3= stack[t2];
t4 = ptr +2;
t5= stack[t4];
if t3==t5 goto et3;
goto et4;
et3:
t6 = 1;
goto et2;
et4:
t6 = 0;
goto et2;
if t6> 0 goto et5;
goto et6;
et5:
ts0[] = "ASIDOJAOWJDOIAWJDOIAJWID";
 printf(ts0);
ts1[] = "WOLLOLOLOLOLO";
 t6 = ptr +0;
t7= stack[t6];
t8 = ptr +1;
t9= stack[t8];
printf(ts1, t7, t9, " \n ");
goto et1;
et6:
et1:
et0 : 
}
com_paquete1_Calculadora__{
t10 = ptr + 0;
stack[t10] = h;
h = h + 2;
t10 = ptr + 0 ;
t11= stack[t10];
t12 = t11 + 1;
Heap[t12] = 0; 
t13 = ptr + 0 ;
t14= stack[t13];
t15 = t14 + 0;
Heap[t15] = 0; 
}
com_paquete1_Calculadora_proceso2_INT_INT_INT {
ts2[] = "Algo";
 printf(ts2, " \n ");
et7 : 
}
ptr = ptr + 3;
com_paquete1_Calculadora__() ;
ptr = ptr - 3;
t16 = ptr + 3;
t17 = t16 + 0;
t18 = stack[t17];
t19 = ptr + 0;
stack[t19] = t18;
t20 = ptr + 0;
t21= stack[t20];
t22= ptr + 3;
t23 = t22 + 0;
stack[t23] = t21 ;
t23 = ptr +3;
t24 = t23 + 1;
stack[t24] = 4;
ptr = ptr + 3;
com_paquete1_Calculadora_proceso2_INT_INT_INT();
ptr = ptr - 3;
t25 = ptr +3;
ptr = ptr + 3;
com_paquete1_funcion_ANY_ANY_ANY_();
ptr = ptr - 3;
t26 = 2+4;
t27= ptr + 1;
stack[t27] = t26 ;
scan();
